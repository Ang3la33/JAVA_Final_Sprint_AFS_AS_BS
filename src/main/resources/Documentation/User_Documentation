## User Documentation for E-Commerce Application

# About the Application

This E-Commerce Application is a CLI based platform that provides functionality
for users: Admin, Buyers, and Sellers.

The system allows users to perform the following actions based on their roles:
- Buyers: Can browse, search for products, and view product details.
- Sellers: Can add, update, delete and view their own products.
- Admin: Can view all users, delete users, and view all products.

This application demonstrates object-orientated principles including inheritance
and polymorphism. It uses a modular architecture with separate classes for handling
users, products, and menus.

## Class Overview
1.`EcomApp`
-Description: Entry point for the application
-Responsibilities: Initializes the `RoleMenu`, `ProductService`, and `UserService` classes,
and starts the login/registration process.
-Key Methods:
    -`main(String[] args)` : The main method that bootstraps the application.

2. `RoleMenu`
-Description: Manages user interactions based on their roles
-Responsibilities:
    -Handles role-based menus and functionalities.
    -Manages login and registration workflows.
-Key Methods:
    -`displayMenu(Users user)`: Displays the menu based on the logged-in user's role
    -`loginOrRegister()`: Prompts users to either log in or register.
    -`viewSellerProducts(int sellerID)` : Lists products specific to a seller.

3.`ProductService`
-Description: Handles all product-related logic.
-Responsibilities:
    -Retrieve, add, update, and delete products.
    -Interact with the database for product data
-Key Methods
    -`getAllProducts()`: Returns a list of all products.
    -`getProductBySeller(int sellerID)`: Retrieves products for a specific seller.
    -`addProduct(Products product): Adds a new product.

4.`UserService`
-Description: Manages all user-related logic.
-Responsibilities:
    -Authenticate users during login.
    -Handle user registration and deletion.
-Key Methods:
    -`getAllUsers()`: Retrieves all registered users.
    -`getUsersById(int userID)`: Finds a user by their ID.
    -`addUsers(Users user)`: Adds a new user.

5.`Products`
-Description: Represents a product in the application
-Attributes:
    -`int prod_id`: Unique identifier for a product.
    -`String prod_name`: Name of the product.
    -`double prod_price`: Price of the product.
    -`int prod_quantity`: Quantity available.
    -`int seller_id`: ID of the seller who owns the product.
-Responsibilities: Acts as a data model for products.

6.`Users`
-Description: Represents a user in the system.
-Attributes:
    -`int user_id`: Unique identifier for a user.
    -`String user_username`: Username.
    -`String user_password`: Password (hashed).
    -`String user_email`: Email address.
    -`String user_role`: Role(Admin,Buyer,Seller).
-Responsibilities: Acts as a data model for users.